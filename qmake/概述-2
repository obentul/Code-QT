#1  ===================================================================================================

--- 变量 ---

类似于 SOURCES HEADERS 等等这样的变量，用来存放 “字符串列表”。

常用的变量有：
CONFIG           ---            工程通用配置
DESTDIR		 ---	        编译输出文件存放路径
FORMS		 ---            ui文件列表 (不用uic模式的话，不需要使用这个选项)
HEADERS		 ---		头文件
QT		 ---		当前工程需要使用到的QT模块
RESOURCES	 ---		qrc文件列表
SOURCES		 ---		cpp文件
TEMPLATE	 ---		工程模板，这个值决定工程输出是什么( 可执行文件/动态库/插件... )
DEPENDPATH 	 ---		“编译时”查找文件的路径 , 比如查找头文件，查找库文件
				注：这个变量相当于包含了INCLUDEPATH 和 LIBS -L ，如果编译时遇到
				    找不到文件的问题，可以把文件路径放到这里



更多变量见： Variables


--- 使用变量的值 ---

变量除了给qmake使用外，也可以在pro文件中认为引用

比如设置了 HEADS后，便可以在之后的代码中 通过 $$HEADS 来使用 HEADS所代表的 “字符串列表”


--- 包含空格的字符串 ---

使用 “” 来处理包含空格的字符串

  win32:INCLUDEPATH += "C:/mylibs/extra headers"
  unix:INCLUDEPATH += "/home/user/extra headers"

上文中的extra headers是一个目录名


#2  ===================================================================================================

--- 内置函数 ---

include(other.pro)    包含other.pro，和#include一样，就是把other.pro内容复制过来


--- 流程控制 ---

类if语句
win32 {
   ...
}
可理解为
if(win32){

}
	注：左括号必须和条件在同一行


更多 “内置函数” 和 “流程控制” 见 qmake Language 、Replace Functions 、 Test Functions


#3  ===================================================================================================

TEMPLATE 参数 详解

app		--		可执行程序(win -> .exe , unix -> xxx)
lib		--		unix 下的 库
aux		--		脚本/解释语言 工程，不编译
subdirs		--		？？？

vcapp		--		vc 可执行文件
vclib		--		vc 库
vcsubdirs	--		？？？

#4  ===================================================================================================

CONFIG += release debug

如果release 和 debug 都定义了，那么使用 qmake 处理时，会生成后定义那个的 Makefile，此例为 Makefile.debug

	注：在使用qt creator的时候，可以选择debug还是release，就不必要在pro文件中写了


CONFIG 除了变量外，还有一个同名函数CONFIG()，用来判断CONFIG变量中是否包含 某个变量，比如:

  CONFIG(opengl) {
      message(Building with OpenGL support.)
  } else {
      message(OpenGL support is not available.)
  }


#5  ===================================================================================================

QT += xml	#工程中使用xml模块
QT -= xml	#不使用xml模块

#6  ===================================================================================================

使用第三方库


--- 设置连接路径 和 设置库名称 ---

LIBS += -L/usr/local/lib -lmath

 	注：不论是windows还是unix，都可以使用上述格式

--- 设置 头文件 ---

INCLUDEPATH = c:/msdev/include d:/stl/include
	
	注：这里没有使用“”，所以c和d之间的空格作为分隔符对待，而不是作为路径中的空格对待





















