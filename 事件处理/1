#1 ========================================================================================================

QApplication::exec()时，就启动Qt的时间循环。

如果在处理某个事件上耗费的时间过多，那么界面就会变得“无法响应”，无响应多是由此造成。（可以考虑给事件处理
函数加上定时器，超过时间没响应则自动跳出，同时报错）

为了防止因为某个处理事件耗时过长而造成的“假死”现象，可以使用多线程来实现。把耗时的流程放到一个线程中处理

另外一种方法是，频繁调用processEvents()函数，此函数会触发事件调度，防止程序卡死在一个处理中。
    注：exec()就是一个不停调用processEvents()函数的while循环


#2 ========================================================================================================

当某个组件实例接收某个信号时，默认动作是自己先处理，处理完后传给自己的父实例，然后再往上传，直到某个实例
处理后将信号截断，或者直到信号已经被传到最顶层实例



#3 ========================================================================================================


#3 ========================================================================================================

#3 ========================================================================================================


#3 ========================================================================================================


#3 ========================================================================================================


#3 ========================================================================================================


#3 ========================================================================================================


#3 ========================================================================================================


#3 ========================================================================================================


#3 ========================================================================================================
